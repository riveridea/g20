/*
Given an array of non-negative integers, you are initially positioned at the first index of the array.

Each element in the array represents your maximum jump length at that position.

Determine if you are able to reach the last index.

For example:
A = [2,3,1,1,4], return true.

A = [3,2,1,0,4], return false.
*/


##
我们用maxlength 维护一个从开始位置能到达的最远距离，然后判断在当前位置是否能够到底最后一个位置和当前位置是否可达，如果两个条件都满足，那么返回true，如果当前位置是0，并且最远距离不能超过当前位置，那么只能返回false 了，更新最远距离
##


public class Solution {
    public boolean canJump(int[] A) {
        if(A.length <= 1)
    		return true;
    			
		if(A[0] >= (A.length - 1))
			return true;
			
		int maxlength = A[0];
		
		if(maxlength == 0)
		    return false;
		    
		for(int i = 1; i < A.length - 1; i++)
		{
			if(maxlength >= i && (i + A[i]) >= A.length - 1)
				return true;
				
			if(maxlength <= i && A[i] == 0)
				return false;
				
			if((i + A[i]) > maxlength)
				maxlength = i + A[i];
		}
		
		return false;
              
    }
}